local v0 = game:DefineFastInt("UGCValidateArmXMinClassic", 25);
local v1 = game:DefineFastInt("UGCValidateArmXMinSlender", 25);
local v2 = game:DefineFastInt("UGCValidateArmXMinNormal", 25);
local v3 = game:DefineFastInt("UGCValidateArmXMaxClassic", 200);
local v4 = game:DefineFastInt("UGCValidateArmXMaxSlender", 150);
local v5 = game:DefineFastInt("UGCValidateArmXMaxNormal", 200);
local v6 = game:DefineFastInt("UGCValidateArmYMinClassic", 150);
local v7 = game:DefineFastInt("UGCValidateArmYMinSlender", 150);
local v8 = game:DefineFastInt("UGCValidateArmYMinNormal", 150);
local v9 = game:DefineFastInt("UGCValidateArmYMaxClassic", 300);
local v10 = game:DefineFastInt("UGCValidateArmYMaxSlender", 400);
local v11 = game:DefineFastInt("UGCValidateArmYMaxNormal", 450);
local v12 = game:DefineFastInt("UGCValidateArmZMinClassic", 25);
local v13 = game:DefineFastInt("UGCValidateArmZMinSlender", 25);
local v14 = game:DefineFastInt("UGCValidateArmZMinNormal", 25);
local v15 = game:DefineFastInt("UGCValidateArmZMaxClassic", 200);
local v16 = game:DefineFastInt("UGCValidateArmZMaxSlender", 200);
local v17 = game:DefineFastInt("UGCValidateArmZMaxNormal", 200);
local v18 = game:DefineFastInt("UGCValidateLegXMinClassic", 25);
local v19 = game:DefineFastInt("UGCValidateLegXMinSlender", 25);
local v20 = game:DefineFastInt("UGCValidateLegXMinNormal", 25);
local v21 = game:DefineFastInt("UGCValidateLegXMaxClassic", 150);
local v22 = game:DefineFastInt("UGCValidateLegXMaxSlender", 150);
local v23 = game:DefineFastInt("UGCValidateLegXMaxNormal", 150);
local v24 = game:DefineFastInt("UGCValidateLegYMinClassic", 200);
local v25 = game:DefineFastInt("UGCValidateLegYMinSlender", 200);
local v26 = game:DefineFastInt("UGCValidateLegYMinNormal", 200);
local v27 = game:DefineFastInt("UGCValidateLegYMaxClassic", 275);
local v28 = game:DefineFastInt("UGCValidateLegYMaxSlender", 330);
local v29 = game:DefineFastInt("UGCValidateLegYMaxNormal", 330);
local v30 = game:DefineFastInt("UGCValidateLegZMinClassic", 50);
local v31 = game:DefineFastInt("UGCValidateLegZMinSlender", 50);
local v32 = game:DefineFastInt("UGCValidateLegZMinNormal", 50);
local v33 = game:DefineFastInt("UGCValidateLegZMaxClassic", 200);
local v34 = game:DefineFastInt("UGCValidateLegZMaxSlender", 200);
local v35 = game:DefineFastInt("UGCValidateLegZMaxNormal", 200);
local v36 = game:DefineFastInt("UGCValidateTorsoXMinClassic", 100);
local v37 = game:DefineFastInt("UGCValidateTorsoXMinSlender", 100);
local v38 = game:DefineFastInt("UGCValidateTorsoXMinNormal", 100);
local v39 = game:DefineFastInt("UGCValidateTorsoXMaxClassic", 350);
local v40 = game:DefineFastInt("UGCValidateTorsoXMaxSlender", 250);
local v41 = game:DefineFastInt("UGCValidateTorsoXMaxNormal", 400);
local v42 = game:DefineFastInt("UGCValidateTorsoYMinClassic", 200);
local v43 = game:DefineFastInt("UGCValidateTorsoYMinSlender", 200);
local v44 = game:DefineFastInt("UGCValidateTorsoYMinNormal", 200);
local v45 = game:DefineFastInt("UGCValidateTorsoYMaxClassic", 325);
local v46 = game:DefineFastInt("UGCValidateTorsoYMaxSlender", 300);
local v47 = game:DefineFastInt("UGCValidateTorsoYMaxNormal", 300);
local v48 = game:DefineFastInt("UGCValidateTorsoZMinClassic", 70);
local v49 = game:DefineFastInt("UGCValidateTorsoZMinSlender", 70);
local v50 = game:DefineFastInt("UGCValidateTorsoZMinNormal", 70);
local v51 = game:DefineFastInt("UGCValidateTorsoZMaxClassic", 200);
local v52 = game:DefineFastInt("UGCValidateTorsoZMaxSlender", 200);
local v53 = game:DefineFastInt("UGCValidateTorsoZMaxNormal", 225);
local v54 = game:DefineFastInt("UGCValidateHeadXMinClassic", 50);
local v55 = game:DefineFastInt("UGCValidateHeadXMinSlender", 50);
local v56 = game:DefineFastInt("UGCValidateHeadXMinNormal", 50);
local v57 = game:DefineFastInt("UGCValidateHeadXMaxClassic", 150);
local v58 = game:DefineFastInt("UGCValidateHeadXMaxSlender", 200);
local v59 = game:DefineFastInt("UGCValidateHeadXMaxNormal", 300);
local v60 = game:DefineFastInt("UGCValidateHeadYMinClassic", 50);
local v61 = game:DefineFastInt("UGCValidateHeadYMinSlender", 50);
local v62 = game:DefineFastInt("UGCValidateHeadYMinNormal", 50);
local v63 = game:DefineFastInt("UGCValidateHeadYMaxClassic", 175);
local v64 = game:DefineFastInt("UGCValidateHeadYMaxSlender", 200);
local v65 = game:DefineFastInt("UGCValidateHeadYMaxNormal", 200);
local v66 = game:DefineFastInt("UGCValidateHeadZMinClassic", 50);
local v67 = game:DefineFastInt("UGCValidateHeadZMinSlender", 50);
local v68 = game:DefineFastInt("UGCValidateHeadZMinNormal", 50);
local v69 = game:DefineFastInt("UGCValidateHeadZMaxClassic", 200);
local v70 = game:DefineFastInt("UGCValidateHeadZMaxSlender", 200);
local v71 = game:DefineFastInt("UGCValidateHeadZMaxNormal", 200);
local v72 = game:DefineFastInt("UGCValidateFullBodyXMinClassic", 150);
local v73 = game:DefineFastInt("UGCValidateFullBodyXMinSlender", 150);
local v74 = game:DefineFastInt("UGCValidateFullBodyXMinNormal", 150);
local v75 = game:DefineFastInt("UGCValidateFullBodyXMaxClassic", 750);
local v76 = game:DefineFastInt("UGCValidateFullBodyXMaxSlender", 550);
local v77 = game:DefineFastInt("UGCValidateFullBodyXMaxNormal", 800);
local v78 = game:DefineFastInt("UGCValidateFullBodyYMinClassic", 450);
local v79 = game:DefineFastInt("UGCValidateFullBodyYMinSlender", 450);
local v80 = game:DefineFastInt("UGCValidateFullBodyYMinNormal", 450);
local v81 = game:DefineFastInt("UGCValidateFullBodyYMaxClassic", 775);
local v82 = game:DefineFastInt("UGCValidateFullBodyYMaxSlender", 830);
local v83 = game:DefineFastInt("UGCValidateFullBodyYMaxNormal", 830);
local v84 = game:DefineFastInt("UGCValidateFullBodyZMinClassic", 70);
local v85 = game:DefineFastInt("UGCValidateFullBodyZMinSlender", 70);
local v86 = game:DefineFastInt("UGCValidateFullBodyZMinNormal", 70);
local v87 = game:DefineFastInt("UGCValidateFullBodyZMaxClassic", 200);
local v88 = game:DefineFastInt("UGCValidateFullBodyZMaxSlender", 200);
local v89 = game:DefineFastInt("UGCValidateFullBodyZMaxNormal", 225);
return {
    getArmBounds = function() --[[ Line: 133 ]] --[[ Name: getArmBounds ]]
        -- upvalues: v0 (copy), v6 (copy), v12 (copy), v3 (copy), v9 (copy), v15 (copy), v1 (copy), v7 (copy), v13 (copy), v4 (copy), v10 (copy), v16 (copy), v2 (copy), v8 (copy), v14 (copy), v5 (copy), v11 (copy), v17 (copy)
        return {
            Classic = {
                minSize = Vector3.new(v0 / 100, v6 / 100, v12 / 100), 
                maxSize = Vector3.new(v3 / 100, v9 / 100, v15 / 100)
            }, 
            ProportionsSlender = {
                minSize = Vector3.new(v1 / 100, v7 / 100, v13 / 100), 
                maxSize = Vector3.new(v4 / 100, v10 / 100, v16 / 100)
            }, 
            ProportionsNormal = {
                minSize = Vector3.new(v2 / 100, v8 / 100, v14 / 100), 
                maxSize = Vector3.new(v5 / 100, v11 / 100, v17 / 100)
            }
        };
    end, 
    getLegBounds = function() --[[ Line: 174 ]] --[[ Name: getLegBounds ]]
        -- upvalues: v18 (copy), v24 (copy), v30 (copy), v21 (copy), v27 (copy), v33 (copy), v19 (copy), v25 (copy), v31 (copy), v22 (copy), v28 (copy), v34 (copy), v20 (copy), v26 (copy), v32 (copy), v23 (copy), v29 (copy), v35 (copy)
        return {
            Classic = {
                minSize = Vector3.new(v18 / 100, v24 / 100, v30 / 100), 
                maxSize = Vector3.new(v21 / 100, v27 / 100, v33 / 100)
            }, 
            ProportionsSlender = {
                minSize = Vector3.new(v19 / 100, v25 / 100, v31 / 100), 
                maxSize = Vector3.new(v22 / 100, v28 / 100, v34 / 100)
            }, 
            ProportionsNormal = {
                minSize = Vector3.new(v20 / 100, v26 / 100, v32 / 100), 
                maxSize = Vector3.new(v23 / 100, v29 / 100, v35 / 100)
            }
        };
    end, 
    getTorsoBounds = function() --[[ Line: 215 ]] --[[ Name: getTorsoBounds ]]
        -- upvalues: v36 (copy), v42 (copy), v48 (copy), v39 (copy), v45 (copy), v51 (copy), v37 (copy), v43 (copy), v49 (copy), v40 (copy), v46 (copy), v52 (copy), v38 (copy), v44 (copy), v50 (copy), v41 (copy), v47 (copy), v53 (copy)
        return {
            Classic = {
                minSize = Vector3.new(v36 / 100, v42 / 100, v48 / 100), 
                maxSize = Vector3.new(v39 / 100, v45 / 100, v51 / 100)
            }, 
            ProportionsSlender = {
                minSize = Vector3.new(v37 / 100, v43 / 100, v49 / 100), 
                maxSize = Vector3.new(v40 / 100, v46 / 100, v52 / 100)
            }, 
            ProportionsNormal = {
                minSize = Vector3.new(v38 / 100, v44 / 100, v50 / 100), 
                maxSize = Vector3.new(v41 / 100, v47 / 100, v53 / 100)
            }
        };
    end, 
    getHeadBounds = function() --[[ Line: 256 ]] --[[ Name: getHeadBounds ]]
        -- upvalues: v54 (copy), v60 (copy), v66 (copy), v57 (copy), v63 (copy), v69 (copy), v55 (copy), v61 (copy), v67 (copy), v58 (copy), v64 (copy), v70 (copy), v56 (copy), v62 (copy), v68 (copy), v59 (copy), v65 (copy), v71 (copy)
        return {
            Classic = {
                minSize = Vector3.new(v54 / 100, v60 / 100, v66 / 100), 
                maxSize = Vector3.new(v57 / 100, v63 / 100, v69 / 100)
            }, 
            ProportionsSlender = {
                minSize = Vector3.new(v55 / 100, v61 / 100, v67 / 100), 
                maxSize = Vector3.new(v58 / 100, v64 / 100, v70 / 100)
            }, 
            ProportionsNormal = {
                minSize = Vector3.new(v56 / 100, v62 / 100, v68 / 100), 
                maxSize = Vector3.new(v59 / 100, v65 / 100, v71 / 100)
            }
        };
    end, 
    getFullBodyBounds = function() --[[ Line: 297 ]] --[[ Name: getFullBodyBounds ]]
        -- upvalues: v72 (copy), v78 (copy), v84 (copy), v75 (copy), v81 (copy), v87 (copy), v73 (copy), v79 (copy), v85 (copy), v76 (copy), v82 (copy), v88 (copy), v74 (copy), v80 (copy), v86 (copy), v77 (copy), v83 (copy), v89 (copy)
        return {
            Classic = {
                minSize = Vector3.new(v72 / 100, v78 / 100, v84 / 100), 
                maxSize = Vector3.new(v75 / 100, v81 / 100, v87 / 100)
            }, 
            ProportionsSlender = {
                minSize = Vector3.new(v73 / 100, v79 / 100, v85 / 100), 
                maxSize = Vector3.new(v76 / 100, v82 / 100, v88 / 100)
            }, 
            ProportionsNormal = {
                minSize = Vector3.new(v74 / 100, v80 / 100, v86 / 100), 
                maxSize = Vector3.new(v77 / 100, v83 / 100, v89 / 100)
            }
        };
    end
};
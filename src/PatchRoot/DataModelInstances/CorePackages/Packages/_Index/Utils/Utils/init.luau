local l_Parent_0 = script.Parent;
local l_Object_0 = require(l_Parent_0.LuauPolyfill).Object;
local v2 = {};
local v3 = require(script.loaders);
l_Object_0.assign(v2, v3);
local v4 = require(script.helpers);
l_Object_0.assign(v2, v4);
local v5 = require(script["get-directives"]);
l_Object_0.assign(v2, v5);
local v6 = require(script["get-arguments-with-directives"]);
l_Object_0.assign(v2, v6);
local v7 = require(script["get-implementing-types"]);
l_Object_0.assign(v2, v7);
local v8 = require(script["print-schema-with-directives"]);
l_Object_0.assign(v2, v8);
local v9 = require(script["get-fields-with-directives"]);
l_Object_0.assign(v2, v9);
local v10 = require(script["validate-documents"]);
l_Object_0.assign(v2, v10);
local v11 = require(script["parse-graphql-json"]);
l_Object_0.assign(v2, v11);
local v12 = require(script["parse-graphql-sdl"]);
l_Object_0.assign(v2, v12);
local v13 = require(script["build-operation-for-field"]);
l_Object_0.assign(v2, v13);
local v14 = require(script.types);
l_Object_0.assign(v2, v14);
local v15 = require(script.filterSchema);
l_Object_0.assign(v2, v15);
local v16 = require(script.heal);
l_Object_0.assign(v2, v16);
local v17 = require(script.getResolversFromSchema);
l_Object_0.assign(v2, v17);
local v18 = require(script.forEachField);
l_Object_0.assign(v2, v18);
local v19 = require(script.forEachDefaultValue);
l_Object_0.assign(v2, v19);
local v20 = require(script.mapSchema);
l_Object_0.assign(v2, v20);
local v21 = require(script.addTypes);
l_Object_0.assign(v2, v21);
local v22 = require(script.rewire);
l_Object_0.assign(v2, v22);
local v23 = require(script.prune);
l_Object_0.assign(v2, v23);
local v24 = require(script.mergeDeep);
l_Object_0.assign(v2, v24);
local v25 = require(script.Interfaces);
l_Object_0.assign(v2, v25);
local v26 = require(script.stub);
l_Object_0.assign(v2, v26);
local v27 = require(script.selectionSets);
l_Object_0.assign(v2, v27);
local v28 = require(script.getResponseKeyFromInfo);
l_Object_0.assign(v2, v28);
local v29 = require(script.fields);
l_Object_0.assign(v2, v29);
local v30 = require(script.renameType);
l_Object_0.assign(v2, v30);
local v31 = require(script.transformInputValue);
l_Object_0.assign(v2, v31);
local v32 = require(script.mapAsyncIterator);
l_Object_0.assign(v2, v32);
local v33 = require(script.updateArgument);
l_Object_0.assign(v2, v33);
local v34 = require(script.implementsAbstractType);
l_Object_0.assign(v2, v34);
local v35 = require(script.errors);
l_Object_0.assign(v2, v35);
local v36 = require(script.visitResult);
l_Object_0.assign(v2, v36);
local v37 = require(script.getArgumentValues);
l_Object_0.assign(v2, v37);
local v38 = require(script.valueMatchesCriteria);
l_Object_0.assign(v2, v38);
local v39 = require(script.isAsyncIterable);
l_Object_0.assign(v2, v39);
local v40 = require(script.isDocumentNode);
l_Object_0.assign(v2, v40);
local v41 = require(script.astFromValueUntyped);
l_Object_0.assign(v2, v41);
local v42 = require(script.executor);
l_Object_0.assign(v2, v42);
local v43 = require(script.AggregateError);
l_Object_0.assign(v2, v43);
local v44 = require(script.rootTypes);
l_Object_0.assign(v2, v44);
local v45 = require(script.comments);
l_Object_0.assign(v2, v45);
local v46 = require(script.collectFields);
l_Object_0.assign(v2, v46);
local v47 = require(script.inspect);
l_Object_0.assign(v2, v47);
local v48 = require(script.memoize);
l_Object_0.assign(v2, v48);
local v49 = require(script.fixSchemaAst);
l_Object_0.assign(v2, v49);
local v50 = require(script.getOperationASTFromRequest);
l_Object_0.assign(v2, v50);
local v51 = require(script.extractExtensionsFromSchema);
l_Object_0.assign(v2, v51);
return v2;